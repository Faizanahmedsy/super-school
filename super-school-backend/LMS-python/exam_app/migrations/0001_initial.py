# Generated by Django 5.1.2 on 2025-03-18 07:07

import django.db.models.deletion
import exam_app.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('nest_db_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_name', models.CharField(max_length=100)),
                ('assessment_start_datetime', models.DateTimeField()),
                ('assessment_end_datetime', models.DateTimeField()),
                ('status', models.CharField(choices=[('upcoming', 'upcoming'), ('ongoing', 'ongoing'), ('completed', 'completed'), ('cancelled', 'cancelled')], max_length=100)),
                ('is_locked', models.BooleanField(default=False)),
                ('ocr_status', models.CharField(choices=[('not started', 'not started'), ('in progress', 'in progress'), ('completed', 'completed')], default='not started')),
                ('is_reviewed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='batch_assessments', to='nest_db_app.batch')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessments_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessments_deleted_by', to='nest_db_app.user')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='grade_assessments', to='nest_db_app.grade')),
                ('grade_class', models.ManyToManyField(related_name='assessments', to='nest_db_app.gradeclass')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_assessments', to='nest_db_app.school')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='term_assessments', to='nest_db_app.term')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessments_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'assessment',
                'verbose_name_plural': 'assessments',
                'db_table': 'assessments',
            },
        ),
        migrations.CreateModel(
            name='AssessmentSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memorandom', models.FileField(blank=True, null=True, upload_to=exam_app.models.memorandom_upload_path)),
                ('question_paper', models.FileField(blank=True, null=True, upload_to=exam_app.models.question_paper_upload_path)),
                ('assessment_start_datetime', models.DateTimeField()),
                ('assessment_end_datetime', models.DateTimeField()),
                ('paper_title', models.CharField(blank=True, null=True)),
                ('status', models.CharField(choices=[('upcoming', 'upcoming'), ('ongoing', 'ongoing'), ('completed', 'completed'), ('cancelled', 'cancelled')], max_length=100)),
                ('is_locked', models.BooleanField(default=False)),
                ('paper_marks', models.FloatField(default=0)),
                ('ocr_status', models.CharField(choices=[('not started', 'not started'), ('in progress', 'in progress'), ('completed', 'completed')], default='not started')),
                ('is_reviewed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment', to='exam_app.assessment')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_subjects_batch', to='nest_db_app.batch')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_subjects_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_subjects_deleted_by', to='nest_db_app.user')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_subjects_grade', to='nest_db_app.grade')),
                ('grade_class', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_subjects_grade_class', to='nest_db_app.gradeclass')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_subjects_school', to='nest_db_app.school')),
                ('student', models.ManyToManyField(related_name='assessment_subjects_students', to='nest_db_app.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_subjects', to='nest_db_app.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_subjects_term', to='nest_db_app.term')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assessment_subjects_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'assessment_subject',
                'verbose_name_plural': 'assessment_subjects',
                'db_table': 'assessment_subjects',
            },
        ),
        migrations.CreateModel(
            name='DigitalMarking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.CharField()),
                ('question', models.CharField()),
                ('answer', models.CharField()),
                ('not_detected_word', models.JSONField()),
                ('confidence_score', models.IntegerField()),
                ('actual_mark', models.FloatField()),
                ('obtained_mark', models.FloatField()),
                ('obtained_manual_mark', models.FloatField(blank=True, null=True)),
                ('reason', models.CharField()),
                ('teacher_reason', models.CharField(blank=True, null=True)),
                ('strength', models.CharField(default='')),
                ('weakness', models.CharField(default='')),
                ('strength_tags', models.JSONField(default=[])),
                ('weakness_tags', models.JSONField(default=[])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='digital_markings_batch', to='nest_db_app.batch')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='digital_markings_deleted_by', to='nest_db_app.user')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='digital_markings_school', to='nest_db_app.school')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='digital_markings_term', to='nest_db_app.term')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='digital_markings_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'digital_marking',
                'verbose_name_plural': 'digital_markings',
                'db_table': 'digital_markings',
            },
        ),
        migrations.CreateModel(
            name='ManualMarkingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('before', models.JSONField()),
                ('after', models.JSONField()),
                ('done_at', models.DateTimeField(auto_now_add=True)),
                ('digital_marking', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='manual_marking_logs', to='exam_app.digitalmarking')),
                ('done_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='manual_marking_logs_done_by', to='nest_db_app.user')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manual_marking_logs_school', to='nest_db_app.school')),
            ],
            options={
                'verbose_name': 'manual_marking_log',
                'verbose_name_plural': 'manual_marking_logs',
                'db_table': 'manual_marking_logs',
            },
        ),
        migrations.CreateModel(
            name='StudentAnswerSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_sheet', models.FileField(upload_to=exam_app.models.answer_sheet_upload_path)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('obtained_mark', models.FloatField(blank=True, null=True)),
                ('actual_mark', models.FloatField(blank=True, null=True)),
                ('ocr_status', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('assessment_subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='student_assessment_subject_answer_sheets', to='exam_app.assessmentsubject')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='student_answer_sheets_batch', to='nest_db_app.batch')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='student_answer_sheets_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='student_answer_sheets_deleted_by', to='nest_db_app.user')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='student_answer_sheets_grade', to='nest_db_app.grade')),
                ('grade_class', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='student_answer_sheets_grade_class', to='nest_db_app.gradeclass')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answer_sheets_school', to='nest_db_app.school')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answer_sheets', to='nest_db_app.student')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='student_answer_sheets_term', to='nest_db_app.term')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='student_answer_sheets_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'student_answer_sheet',
                'verbose_name_plural': 'student_answer_sheets',
                'db_table': 'student_answer_sheets',
            },
        ),
        migrations.AddField(
            model_name='digitalmarking',
            name='student_answer_sheet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='digital_markings', to='exam_app.studentanswersheet'),
        ),
        migrations.CreateModel(
            name='AnswerSheetImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
                ('ocr_status', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student_answer_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_sheet_images', to='exam_app.studentanswersheet')),
            ],
            options={
                'verbose_name': 'answer_sheet_image',
                'verbose_name_plural': 'answer_sheet_images',
                'db_table': 'answer_sheet_images',
            },
        ),
    ]
