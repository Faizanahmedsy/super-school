# Generated by Django 5.1.2 on 2025-03-18 07:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_year', models.CharField()),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'batch',
                'verbose_name_plural': 'batches',
                'db_table': 'batches',
            },
        ),
        migrations.CreateModel(
            name='GeneralSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_primary_color', models.CharField(blank=True, null=True)),
                ('theme_secondary_color', models.CharField(blank=True, null=True)),
                ('support_email', models.CharField(default='support@pax-africana.co.za', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'general_setting',
                'verbose_name_plural': 'general_settings',
                'db_table': 'general_setting',
            },
        ),
        migrations.CreateModel(
            name='MasterSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_number', models.CharField()),
                ('subject_name', models.CharField()),
                ('subject_code', models.CharField(unique=True)),
                ('is_language', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'master_subject',
                'verbose_name_plural': 'master_subjects',
                'db_table': 'master_subject',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField()),
                ('module_name_show', models.CharField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'module',
                'verbose_name_plural': 'modules',
                'db_table': 'modules',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province_name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'province',
                'verbose_name_plural': 'provinces',
                'db_table': 'provinces',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField()),
                ('role_name_show', models.CharField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='SchoolSetup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_id', models.IntegerField()),
                ('school_id', models.IntegerField()),
                ('current_step', models.CharField(default='CREATE_YEAR')),
                ('year_data', models.JSONField(blank=True, null=True)),
                ('grades_data', models.JSONField(blank=True, null=True)),
                ('classes_data', models.JSONField(blank=True, null=True)),
                ('subjects_data', models.JSONField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'school_setup',
                'verbose_name_plural': 'school_setups',
                'db_table': 'school_setup',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_number', models.IntegerField()),
                ('description', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='grades_batch', to='nest_db_app.batch')),
            ],
            options={
                'verbose_name': 'grade',
                'verbose_name_plural': 'grades',
                'db_table': 'grades',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts_province', to='nest_db_app.province')),
            ],
            options={
                'verbose_name': 'district',
                'verbose_name_plural': 'districts',
                'db_table': 'districts',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.CharField(blank=True, null=True)),
                ('school_name', models.CharField(max_length=100)),
                ('school_type', models.CharField(max_length=100)),
                ('medium_of_instruction', models.CharField(max_length=100)),
                ('EMIS_number', models.CharField()),
                ('address', models.CharField()),
                ('location_type', models.CharField()),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_person', models.CharField()),
                ('contact_email', models.EmailField(max_length=254)),
                ('themePrimaryColor', models.CharField(blank=True, null=True)),
                ('themeSecondaryColor', models.CharField(blank=True, null=True)),
                ('max_users', models.IntegerField()),
                ('current_users', models.IntegerField(blank=True, null=True)),
                ('setup', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='schools_district', to='nest_db_app.district')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='schools_province', to='nest_db_app.province')),
            ],
            options={
                'verbose_name': 'school',
                'verbose_name_plural': 'schools',
                'db_table': 'schools',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_image', models.CharField(blank=True, null=True)),
                ('no_of_student', models.IntegerField(blank=True, null=True)),
                ('relationship', models.CharField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parents_role', to='nest_db_app.role')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parents_school', to='nest_db_app.school')),
            ],
            options={
                'verbose_name': 'parent',
                'verbose_name_plural': 'parents',
                'db_table': 'parents',
            },
        ),
        migrations.CreateModel(
            name='GradeClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='grade_classes_batch', to='nest_db_app.batch')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_classes_grade', to='nest_db_app.grade')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grade_classes_school', to='nest_db_app.school')),
            ],
            options={
                'verbose_name': 'grade_class',
                'verbose_name_plural': 'grade_classes',
                'db_table': 'grade_classes',
            },
        ),
        migrations.AddField(
            model_name='grade',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades_school', to='nest_db_app.school'),
        ),
        migrations.CreateModel(
            name='CalenderEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('start_time', models.CharField(max_length=10)),
                ('end_time', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='calenders_grade', to='nest_db_app.grade')),
                ('grade_class', models.ForeignKey(blank=True, db_column='class_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='calenders_grade_class', to='nest_db_app.gradeclass')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calenders_school', to='nest_db_app.school')),
            ],
            options={
                'verbose_name': 'calendar_event',
                'verbose_name_plural': 'calendar_event',
                'db_table': 'calendar_event',
            },
        ),
        migrations.AddField(
            model_name='batch',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches_school', to='nest_db_app.school'),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='subjects_batch', to='nest_db_app.batch')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='subjects_grade', to='nest_db_app.grade')),
                ('master_subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='subjects_master_subject', to='nest_db_app.mastersubject')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects_school', to='nest_db_app.school')),
            ],
            options={
                'verbose_name': 'subject',
                'verbose_name_plural': 'subjects',
                'db_table': 'subjects',
            },
        ),
        migrations.AddField(
            model_name='gradeclass',
            name='subject',
            field=models.ManyToManyField(to='nest_db_app.subject'),
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms_batch', to='nest_db_app.batch')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms_school', to='nest_db_app.school')),
            ],
            options={
                'verbose_name': 'term',
                'verbose_name_plural': 'terms',
                'db_table': 'terms',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(blank=True, null=True)),
                ('user_name', models.CharField()),
                ('status', models.CharField(blank=True, null=True)),
                ('resetToken', models.CharField(blank=True, null=True)),
                ('resetTokenExpires', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users_deleted_by', to='nest_db_app.user')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='users_role', to='nest_db_app.role')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users_school', to='nest_db_app.school')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_name', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('start_time', models.CharField()),
                ('end_time', models.CharField()),
                ('paper_title', models.CharField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_tables_batch', to='nest_db_app.batch')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_tables_grade', to='nest_db_app.grade')),
                ('grade_class', models.ForeignKey(blank=True, db_column='class_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='time_tables_grade_class', to='nest_db_app.gradeclass')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_tables_school', to='nest_db_app.school')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='timetable_subject', to='nest_db_app.subject')),
                ('term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='timetable_term', to='nest_db_app.term')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='time_tables_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='time_tables_deleted_by', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='time_tables_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'time_table',
                'verbose_name_plural': 'time_tables',
                'db_table': 'time_table',
            },
        ),
        migrations.AddField(
            model_name='term',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='terms_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='term',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='terms_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='term',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='terms_updated_by', to='nest_db_app.user'),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(max_length=100)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('subject_specialization', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('hire_date', models.DateTimeField(blank=True, null=True)),
                ('profile_image', models.CharField(blank=True, null=True)),
                ('extra_activity', models.CharField(blank=True, null=True)),
                ('sace_number', models.CharField(max_length=255)),
                ('persal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('cur_batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teachers_cur_batch', to='nest_db_app.batch')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='teachers_role', to='nest_db_app.role')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers_school', to='nest_db_app.school')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='teachers_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teachers_deleted_by', to='nest_db_app.user')),
                ('teacher_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers_user', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='teachers_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'teacher',
                'verbose_name_plural': 'teachers',
                'db_table': 'teachers',
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('role_name', models.CharField(max_length=255)),
                ('attachment', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nest_db_app.school')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'support',
                'verbose_name_plural': 'supports',
                'db_table': 'support',
            },
        ),
        migrations.AddField(
            model_name='subject',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='subjects_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='subject',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='subjects_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='subject',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='subjects_updated_by', to='nest_db_app.user'),
        ),
        migrations.CreateModel(
            name='StudyMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.CharField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('year', models.CharField(blank=True, max_length=255, null=True)),
                ('month', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('question_paper', models.CharField(blank=True, null=True)),
                ('paper_memo', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_batch', to='nest_db_app.batch')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_grade', to='nest_db_app.grade')),
                ('master_subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_master_subject', to='nest_db_app.mastersubject')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_materials_school', to='nest_db_app.school')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_subject', to='nest_db_app.subject')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_teacher', to='nest_db_app.teacher')),
                ('term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_term', to='nest_db_app.term')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_deleted_by', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='study_materials_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'study material',
                'verbose_name_plural': 'study materials',
                'db_table': 'study_materials',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addmission_no', models.CharField(blank=True, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(max_length=100)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_image', models.CharField(blank=True, null=True)),
                ('quiz_count', models.IntegerField(default=25)),
                ('extra_activity', models.CharField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('cur_batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='students_cur_batch', to='nest_db_app.batch')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='students_grade', to='nest_db_app.grade')),
                ('grade_class', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='students_grade_class', to='nest_db_app.gradeclass')),
                ('parents', models.ManyToManyField(to='nest_db_app.parent')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='students_role', to='nest_db_app.role')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students_school', to='nest_db_app.school')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='students_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='students_deleted_by', to='nest_db_app.user')),
                ('student_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students_user', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='students_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='SchoolAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_image', models.CharField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='school_admins_role', to='nest_db_app.role')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_admins_school', to='nest_db_app.school')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='school_admins_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='school_admins_deleted_by', to='nest_db_app.user')),
                ('school_admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_admins_user', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='school_admins_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'school_admin',
                'verbose_name_plural': 'school_admins',
                'db_table': 'school_admins',
            },
        ),
        migrations.AddField(
            model_name='school',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='schools_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='school',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='schools_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='school',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='schools_updated_by', to='nest_db_app.user'),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions_module', to='nest_db_app.module')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions_role', to='nest_db_app.role')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permissions_school', to='nest_db_app.school')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='permissions_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='permissions_deleted_by', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='permissions_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'permission',
                'verbose_name_plural': 'permissions',
                'db_table': 'permissions',
            },
        ),
        migrations.AddField(
            model_name='parent',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='parents_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='parent',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parents_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='parent',
            name='parent_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents_user', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='parent',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parents_updated_by', to='nest_db_app.user'),
        ),
        migrations.CreateModel(
            name='OldQuestionPapers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_name', models.CharField()),
                ('paper_exam_date', models.DateField()),
                ('question_paper', models.FileField(upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='old_question_papers_batch', to='nest_db_app.batch')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_question_papers_grade', to='nest_db_app.grade')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_question_papers_school', to='nest_db_app.school')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_question_papers_subject', to='nest_db_app.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='old_question_papers_term', to='nest_db_app.term')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='old_question_papers_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='old_question_papers_deleted_by', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='old_question_papers_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'old_question_paper',
                'verbose_name_plural': 'old_question_papers',
                'db_table': 'old_question_papers',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField()),
                ('message', models.CharField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('show_to_all', models.BooleanField(blank=True, default=False, null=True)),
                ('recipient_count', models.IntegerField(blank=True, default=0, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notifications_event', to='nest_db_app.calenderevent')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notifications_grade', to='nest_db_app.grade')),
                ('grade_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notifications_grade_class', to='nest_db_app.gradeclass')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='notifications_module', to='nest_db_app.module')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_school', to='nest_db_app.school')),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notifications_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notifications_deleted_by', to='nest_db_app.user')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications_to_user', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notifications_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'db_table': 'notifications',
            },
        ),
        migrations.AddField(
            model_name='module',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modules_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='module',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modules_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='module',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modules_updated_by', to='nest_db_app.user'),
        ),
        migrations.CreateModel(
            name='LessonPlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField()),
                ('notes', models.CharField(blank=True, null=True)),
                ('activity', models.TextField()),
                ('activity_type', models.CharField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lesson_plans_batch', to='nest_db_app.batch')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lesson_plans_grade', to='nest_db_app.grade')),
                ('grade_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lesson_plans_grade_class', to='nest_db_app.gradeclass')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_plans_school', to='nest_db_app.school')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lesson_plans_subject', to='nest_db_app.subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lesson_plans_user', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'lesson_plan',
                'verbose_name_plural': 'lesson_plans',
                'db_table': 'lesson_plans',
            },
        ),
        migrations.AddField(
            model_name='gradeclass',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='grade_classes_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='gradeclass',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='grade_classes_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='gradeclass',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='grade_classes_updated_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='grade',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='grades_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='grade',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='grades_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='grade',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='grades_updated_by', to='nest_db_app.user'),
        ),
        migrations.CreateModel(
            name='DepartmentUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField()),
                ('last_name', models.CharField()),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('job_title', models.CharField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_users_district', to='nest_db_app.district')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_users_province', to='nest_db_app.province')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_users_role', to='nest_db_app.role')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='department_users_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='department_users_deleted_by', to='nest_db_app.user')),
                ('department_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='department_users_user', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='department_users_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'department_user',
                'verbose_name_plural': 'department_users',
                'db_table': 'department_user',
            },
        ),
        migrations.CreateModel(
            name='ClassSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_subjects_batch', to='nest_db_app.batch')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subjects_grade', to='nest_db_app.grade')),
                ('grade_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subjects_grade_class', to='nest_db_app.gradeclass')),
                ('master_subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_subjects_master_subject', to='nest_db_app.mastersubject')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_subjects_school', to='nest_db_app.school')),
                ('students', models.ManyToManyField(to='nest_db_app.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_subjects_subject', to='nest_db_app.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_subjects_teacher', to='nest_db_app.teacher')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_subjects_term', to='nest_db_app.term')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_subjects_created_by', to='nest_db_app.user')),
                ('deleted_by', models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_subjects_deleted_by', to='nest_db_app.user')),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='class_subjects_updated_by', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'class_subject',
                'verbose_name_plural': 'class_subjects',
                'db_table': 'class_subjects',
            },
        ),
        migrations.AddField(
            model_name='calenderevent',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='calenders_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='calenderevent',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='calenders_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='calenderevent',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='calenders_updated_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='batch',
            name='created_by',
            field=models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='batches_created_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='batch',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_column='deleted_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='batches_deleted_by', to='nest_db_app.user'),
        ),
        migrations.AddField(
            model_name='batch',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='batches_updated_by', to='nest_db_app.user'),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField()),
                ('message', models.CharField()),
                ('old_data', models.JSONField(blank=True, null=True)),
                ('new_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='audit_logs_role', to='nest_db_app.role')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs_school', to='nest_db_app.school')),
                ('action_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='audit_logs_action_user', to='nest_db_app.user')),
            ],
            options={
                'verbose_name': 'audit_log',
                'verbose_name_plural': 'audit_logs',
                'db_table': 'audit_log',
            },
        ),
    ]
